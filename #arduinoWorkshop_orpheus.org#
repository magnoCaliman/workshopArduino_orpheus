* 0. Arduino?
- What is it?
  - https://www.arduino.cc/

*adicionar descrição mais detalhada. microcontrolador programável vs linguagem/ide/hardware*
*ecossistema que permite criar lógica para interfacear(controlar) hardware e software*

- What can you make?
  - *talvez começar com um exemplo um pouco melhor?*
  - Coin slot detector: https://www.instructables.com/id/coin-slot-detector/
  - Geiger counter: https://www.cooking-hacks.com/documentation/tutorials/geiger-counter-radiation-sensor-board-arduino-raspberry-pi-tutorial
  - Beat slicer: https://vimeo.com/45422593
  - Cabinet of Curiosness: https://youtu.be/JCiXV6b7N0A

*** 0.1 INSTALLATION
- https://www.arduino.cc/en/Main/Software

**** 0.1.1 DRIVERS
- Chinese Arduinos need (usually) extra drivers to be installed on you computer in order to work
- Search for "CH340 Arduino driver" + the name /and version/ of you OS
  - http://www.wch.cn/download/CH341SER_MAC_ZIP.html
  - http://www.wch.cn/download/CH341SER_EXE.html
  - https://sparks.gogo.co.nz/ch340.html


* 1. BLINK
1. Open a new Arduino IDE, delete everything, copy and paste the code below
2. Select the correct board and port in ~Tools -> Board~ and ~Tools -> Port~
3. Save the file
4. Upload it

*** 1.1 CODE
#+BEGIN_SRC c
int pinoLed = 13;

void setup()
{
  pinMode(pinoLed, OUTPUT);
}

void loop()
{
  digitalWrite(pinoLed, HIGH);
  delay(1000);
  digitalWrite(pinoLed, LOW);
  delay(500);  
}
#+END_SRC

*** 1.2 NOTES
- Folder structure
- Naming conventions

*** 1.3 MODS
- What are you able to change in this code? What are your /entry points/?


* 2. ~tone()~

*** 2.1 CIRCUIT
~/exemplos_WorkshopSomar/tone_02/tone_02.png~

[[/examples_workshopOrpheus/tone_02/tone_02.png]]

*** 2.2 CODE
~/examples_workshopOrpheus/tone_02/tone_02.ino~

#+BEGIN_SRC c
void setup()
{
  
}

void loop()
{
  tone(5, 100);
}
#+END_SRC

*** 2.3 NOTES
- ~void setup()~ and ~void loop()~
- Functions & arguments
- RTFM
- Syntax

*** 2.4 MODS
- From ~tone()~ reference: "Only one tone can be generated at a time"
#+BEGIN_SRC c
// can you do this then?
void loop()
{
  tone(5, 100); 
  tone(5, 101);
}
#+END_SRC


* 3. ~delay()~

*** 2.1 CODE
~/examples_workshopOrpheus/toneDelay_03/toneDelay_03.ino~

#+BEGIN_SRC c
void setup()
{
  
}

void loop()
{
  tone(5, 100, 500); //now with 3 arguments!
  delay(1000);
}
#+END_SRC

*** 2.2 NOTES
- Comments
- Amount of arguments
- Order/execution time

*** 2.3 MODS
- Now we can make several sound in sequence...

#+BEGIN_SRC c
void loop()
{
  tone(5, 100, 90);
  delay(100);
  tone(5, 200, 90);
  delay(100);
  tone(5, 300, 90);
  delay(100);
  tone(5, 400, 90);
  delay(100);
}
#+END_SRC

- What frequency values to choose?
  - Rational ratios (double, half, 1/3, etc)
  - Arithmetic and geometric sequences
  - Musical pitches: http://pages.mtu.edu/~suits/notefreqs.html
  - Any value!


* 4. VARIABLES
** 4.1 EXAMPLE 1
*** 4.1.1 CODE
- Stranger tempo...
  - https://www.youtube.com/watch?v=-RcPZdihrp4
- Seems slow. How can we fix it?

~examples_workshopOrpheus/toneVar_04_problem/toneVar_04_problem.ino~

#+BEGIN_SRC c
void setup()
{

}

void loop()
{
  tone(5, 65);
  delay(250);
  tone(5, 82);
  delay(250);
  tone(5, 98);
  delay(250);
  tone(5, 123);
  delay(250);
  tone(5, 130);
  delay(250);
  tone(5, 123);
  delay(250);
  tone(5, 98);
  delay(250);
  tone(5, 82);
  delay(250);
}
#+END_SRC

~examples_WorkshopOrpheus/toneVar_05_solution/toneVar_05_solution.ino~

- *TODO There's your problem...*

#+BEGIN_SRC c
int delayTime = 180;

void setup()
{

}

void loop()
{
  tone(5, 65);
  delay(delayTime);
  tone(5, 82);
  delay(delayTime);
  tone(5, 98);
  delay(delayTime);
  tone(5, 123);
  delay(delayTime);
  tone(5, 130);
  delay(delayTime);
  tone(5, 123);
  delay(delayTime);
  tone(5, 98);
  delay(delayTime);
  tone(5, 82);
  delay(delayTime);
}
#+END_SRC

*** 4.1.2 NOTES 
- Naming conventions

*** 4.1.3 MODS
- Change speaker to pin 7

** 4.2 EXAMPLE 2
*** 4.2.1 CODE
~exemplos_WorkshopSomar/varOperacao_06/varOperacao_06.ino~

#+BEGIN_SRC c
int pinSpeaker = 7;
int baseFreq = 100;
int delayTime = 800;

void setup()
{
  
}

void loop()
{
  tone(pinSpeaker, baseFreq, 90);
  delay(delayTime);
  tone(pinSpeaker, baseFreq + 100, 90);
  delay(delayTime);
  tone(pinSpeaker, baseFreq + 200, 90);
  delay(delayTime);
  tone(pinSpeaker, baseFreq + 150, 90);
  delay(delayTime);
}
#+END_SRC

*** 4.2.2 NOTES
- Does the line ~tone(pinSpeaker, baseFreq + 100, 90);~ changes the value of the variable ~baseFreq~?
- What's the value of ~baseFreq~ at line 12? And 14?

*** 4.2.3 MODS
- How can we make the duratin of the sound /proportional/ to the time between those sounds? For example, always 10% smaller? *TODO refrasear*
  

* 5. ~random()~
*** 5.1 CODE
~examples_orkshopOrpheus/random_07/random_07.ino~

#+BEGIN_SRC c
int pinSpeaker = 7;
int delayTime = 100;

void setup()
{
  
}

void loop()
{
  tone(pinSpeaker, random(100, 500), 90);
  delay(delayTime);
}
#+END_SRC

*** 5.1 NOTES
- Functions as arguments for other functions / modularity as a principle
- Numeric value as an abstract concept *TODO refrasear*

*** 5.2 MODS
- Noise!

#+BEGIN_SRC c
void loop()
{
  tone(pinoColuna, random(100, 500));
}
#+END_SRC

- Without runnig the code, can you tell the diference in behaviour between ~delayRandom_08.ino~ and ~delayRandom_09.ino~?

  
* 6. ~if()~
** 6.1 EXAMPLE 1
*** 6.1.1 CODE
~exemplos_WorkshopSomar/if_10/if_10.ino~

#+BEGIN_SRC c
int pinSpeaker = 7;         //TODO
int delayTime = 100;        //rever esses valores
int durSomLongo = 150;      //talvez retirar variáveis de dur
int durSomCurto = 40;

void setup()
{

}

void loop()
{
  int dado = random(0, 10);

  if (dado < 5)
  {
    tone(pinSpeaker, 100, durSomLongo);
    delay(delayTime);
    tone(pinSpeaker, 150, durSomLongo);
    delay(delayTime);
    tone(pinSpeaker, 180, durSomLongo);
    delay(delayTime);
    tone(pinSpeaker, 120, durSomLongo);
    delay(delayTime);
  }

  if (dado > 5)
  {
    tone(pinSpeaker, 300, durSomCurto);
    delay(delayTime);
    tone(pinSpeaker, 350, durSomCurto);
    delay(delayTime);
    tone(pinSpeaker, 480, durSomCurto);
    delay(delayTime);
    tone(pinSpeaker, 450, durSomCurto);
    delay(delayTime);
  }
}
#+END_SRC

*** 6.1.2 NOTES
- ~TRUE~ and ~FALSE~ logic
- Syntax errors vs. logic errors

*** 6.1.3 MODS
- How can you change the probability of events?

** 6.2 EXAMPLE 2
*** 6.2.1 CODE
~exemplos_WorkshopSomar/if_11/if_11.ino~

#+BEGIN_SRC c
int pinSpeaker = 7;
int delayTime = 180;
int dur;

void setup()
{

}

void loop()
{
  int dado = random(0, 2);

  if (dado == 0)
  {
    dur = 40;
  }

  if (dado == 1)
  {
    dur = 180;  
  }
  
  tone(pinSpeaker,65, dur);
  delay(delayTime);
  tone(pinSpeaker,82, dur);
  delay(delayTime);
  tone(pinSpeaker,98, dur);
  delay(delayTime);
  tone(pinSpeaker,123, dur);
  delay(delayTime);
  tone(pinSpeaker,130, dur);
  delay(delayTime);
  tone(pinSpeaker,123, dur);
  delay(delayTime);
  tone(pinSpeaker,98, dur);
  delay(delayTime);
  tone(pinSpeaker,82, dur);
  delay(delayTime);
}
#+END_SRC

*** 6.2.1 NOTES
- ~=~ vs. ~==~
- if para modificar valores (mão invisível que modula os 'entry points') *TODO refrasear* 

*** 6.3 MODS
- *TODO*

** 6.2 EXAMPLE 3
*TODO* - ~if() else~ (talvez deixar para exemplos com sensores? botão...)


* 7. ITERATION
*** 7.1 CODE
~exemplos_WorkshopSomar/iteracao_12/iteracao_12.ino~

#+BEGIN_SRC c
int pinSpeaker = 7;
int freq = 31;

void setup()
{

}

void loop()
{
  tone(pinSpeaker, freq);

  freq = freq + 1;

  delay(500);
}
#+END_SRC

*** 7.2 NOTES
- ~x = x + 1~ is mathematically untrue, but computationally valid

*** 7.3 MODS
- How can you make it rise faster, /and then restart/?


* 8. TUDO JUNTO E MISTURADO
~exemplos_WorkshopSomar/tudoJunto_13/tudoJunto_13.ino~

- This code uses all the concepts shown up untill now, mixed in a single example. How?
- What are the entry points to it?

#+BEGIN_SRC c
int pinSpeaker = 7;
int delayTime = 100;
int dur = 90;
int randMax = 55;

void setup()
{

}

void loop()
{
  int freqGliss = random(50, randMax);
  
  tone(pinSpeaker, freqGliss, dur);
  delay(delayTime);

  randMax = randMax + 5;

  if (randMax > 500)
  {
    randMax = 55;  
  }
}
#+END_SRC
